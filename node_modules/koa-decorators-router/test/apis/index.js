"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const Koa = require("koa");
const index_1 = require("../../index");
let User = class User {
    getlist(ctx) {
        return __awaiter(this, void 0, void 0, function* () {
            ctx.body = 'ok';
        });
    }
    getQueryList(ctx) {
        return __awaiter(this, void 0, void 0, function* () {
            ctx.body = ctx.query.q;
        });
    }
    getDetail(ctx) {
        return __awaiter(this, void 0, void 0, function* () {
            ctx.body = ctx.params.id;
        });
    }
    updId(ctx) {
        return __awaiter(this, void 0, void 0, function* () {
            ctx.body = ctx.params.id;
        });
    }
    postValue(ctx) {
        return __awaiter(this, void 0, void 0, function* () {
            let body = ctx.request.body;
            ctx.body = body;
        });
    }
};
__decorate([
    index_1.get('list'),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [Object]),
    __metadata("design:returntype", Promise)
], User.prototype, "getlist", null);
__decorate([
    index_1.get('query'),
    index_1.required({
        query: 'q'
    }),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [Object]),
    __metadata("design:returntype", Promise)
], User.prototype, "getQueryList", null);
__decorate([
    index_1.get('detail/:id'),
    index_1.required({
        params: 'id'
    }),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [Object]),
    __metadata("design:returntype", Promise)
], User.prototype, "getDetail", null);
__decorate([
    index_1.put('upd/:id'),
    index_1.required({
        params: 'id'
    }),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [Object]),
    __metadata("design:returntype", Promise)
], User.prototype, "updId", null);
__decorate([
    index_1.post('reqPost'),
    index_1.required({
        body: {
            username: 'string',
            age: 'number'
        }
    }),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [Object]),
    __metadata("design:returntype", Promise)
], User.prototype, "postValue", null);
User = __decorate([
    index_1.controller('userPath')
], User);
