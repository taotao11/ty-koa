"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
require("mocha");
const supertest = require("supertest");
const mocha_chai_1 = require("./mocha-chai");
const app_1 = require("./app");
describe('my-koa-route', () => {
    let request;
    before(() => {
        request = supertest(app_1.default.listen());
    });
    it('should router path', () => __awaiter(this, void 0, void 0, function* () {
        let { text } = yield request
            .get('/userPath/list')
            .expect(200);
        mocha_chai_1.default(text).to.equal('ok');
    }));
    it('should get request query required', () => __awaiter(this, void 0, void 0, function* () {
        yield request
            .get('/userPath/query')
            .expect(412);
    }));
    it('should get request query value', () => __awaiter(this, void 0, void 0, function* () {
        let { text } = yield request
            .get('/userPath/query?q=123456')
            .expect(200);
        mocha_chai_1.default(text).to.equal('123456');
    }));
    it('should get request params required', () => __awaiter(this, void 0, void 0, function* () {
        yield request
            .get('/userPath/detail')
            .expect(404);
    }));
    it('should get request params value', () => __awaiter(this, void 0, void 0, function* () {
        let { text } = yield request
            .get('/userPath/detail/g456789')
            .expect(200);
        mocha_chai_1.default(text).to.equal('g456789');
    }));
    it('should put delete request params required', () => __awaiter(this, void 0, void 0, function* () {
        yield request
            .put('/userPath/upd')
            .expect(404);
    }));
    it('should put delete request params value', () => __awaiter(this, void 0, void 0, function* () {
        let { text } = yield request
            .put('/userPath/upd/g99999')
            .expect(200);
        mocha_chai_1.default(text).to.equal('g99999');
    }));
    it('should post request body required', () => __awaiter(this, void 0, void 0, function* () {
        yield request
            .post('/userPath/reqPost')
            .expect(412);
    }));
    it('should post request body type', () => __awaiter(this, void 0, void 0, function* () {
        yield request
            .post('/userPath/reqPost')
            .send({ username: 1234 })
            .send({ age: 'zhangsan' })
            .expect(412);
    }));
    it('should post request body value', () => __awaiter(this, void 0, void 0, function* () {
        let { text } = yield request
            .post('/userPath/reqPost')
            .send({ username: 'zhangsan' })
            .send({ age: 12 })
            .expect(200);
        mocha_chai_1.default(JSON.parse(text)).to.deep.equal({ username: 'zhangsan', age: 12 });
    }));
});
